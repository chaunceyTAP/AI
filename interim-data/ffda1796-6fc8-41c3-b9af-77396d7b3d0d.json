{"guid":"ffda1796-6fc8-41c3-b9af-77396d7b3d0d","title":"Supervising workflows","path":"help\\workflow\\using\\supervising-workflows.md","fullText":"---\nproduct: campaign\ntitle: Supervising workflows\ndescription: Learn how to supervise Campaign workflows\nfeature: Workflows\nexl-id: ca6d4bf4-7b3a-4d36-9fc3-0b83531d0132\n---\n# Use case: supervise your workflows{#supervising-workflows}\n\n\n\nThis use case details the creation of a workflow that lets you monitor the status of a set of workflows that are \"paused\", \"stopped\" or \"with errors\".\n\nIts purpose is to:\n\n* Use a workflow to monitor a group of business workflows.\n* Send a message to a supervisor via a \"delivery\" activity.\n\nTo monitor the status of a set of workflows, you need to follow these steps:\n\n1. Create the monitoring workflow.\n1. Write the JavaScript to determine whether workflows are paused, stopped, or with errors.\n1. Create the **[!UICONTROL Test]** activity.\n1. Prepare the delivery template.\n\n>[!NOTE]\n>\n>In addition to the workflow, Campaign **Workflow Heatmap** allows you to analyse in details the workflows that are currently running. For more on this, refer to the [dedicated section](heatmap.md).\n>\n>For more on how to **monitor your workflows' execution**, refer to [this section](monitoring-workflow-execution.md).\n\n## Step 1: Creating the monitoring workflow {#step-1--creating-the-monitoring-workflow}\n\nThe workflow folder that we are going to monitor is the **\"CustomWorkflows\"** folder stored in the **Administration > Production > Technical workflows** node. This folder contains a set of business workflows.\n\nThe **Monitoring workflow** is stored at the root of the Technical Workflows folder. The label used is **\"Monitoring\"**.\n\nThe following schema shows the sequence of activities:\n\n![](assets/uc_monitoring_workflow_overview.png)\n\nThis workflow is made up of:\n\n* a **\"Start\"** activity.\n* a **\"JavaScript code\"** activity responsible for analyzing the business workflows folder.\n* a **\"Test\"** activity to send a delivery to the supervisor or re-start the workflow.\n* a **\"Delivery\"** activity responsible for message layout.\n* a **\"Wait\"** activity that controls the lead times between workflow iterations.\n\n## Step 2: Writing the JavaScript {#step-2--writing-the-javascript}\n\nThe first part of the JavaScript code coincides with a **query (queryDef)** that lets you identify the workflows with a \"pause\" (@state == 13), \"error\" (@failed == 1) or \"stopped\" (@state == 20) status.\n\nThe **internal name** of the workflow folder to monitor is given in the following condition:\n\n```\n<condition boolOperator=\"AND\" expr=\"[folder/@name] = 'Folder20'\" internalId=\"1\"/>\n```\n\n```\nvar strError = \"\";\nvar strPaused = \"\";\nvar strStop = \"\";\n\nvar queryWkfError = xtk.queryDef.create(\n  <queryDef schema=\"xtk:workflow\" operation=\"select\">\n    <select>\n      <node expr=\"@internalName\"/>\n      <node expr=\"@state\"/>\n      <node expr=\"@label\"/>\n      <node expr=\"@failed\"/>\n      <node expr=\"@state\"/>   \n    </select>\n    <where id=\"12837805386\">\n      <condition boolOperator=\"AND\" expr=\"[folder/@name] = 'Folder20'\" internalId=\"1\"/>\n        <condition boolOperator=\"AND\" internalId=\"2\">\n          <condition boolOperator=\"OR\" expr=\"@state = 20\" internalId=\"3\"/>\n          <condition expr=\"@state = 13\" internalId=\"4\"/>\n        </condition>  \n    </where>\n  </queryDef>\n);\nvar ndWkfError = queryWkfError.ExecuteQuery(); \n```\n\nThe second part of the JavaScript code lets you **display a message for each workflow** based on the status recovered during the query.\n\n>[!NOTE]\n>\n>The strings created must be loaded in the workflow's event variables.\n\n```\nfor each ( var wkf in ndWkfError.workflow ) \n{\n  if ( wkf.@state == 13 )  // Status 13 = paused\n  {\n    if ( wkf.@failed == 1 )\n      strError += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n    else\n      strPaused += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n  }\n  \n  if ( wkf.@state == 20 )  // Status 20 = stop\n    strStop += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n}\n\nvars.strWorkflowError = strError;\nvars.strWorkflowPaused = strPaused;\nvars.strWorkflowStop = strStop;\n```\n\n## Step 3: Creating the 'Test' activity {#step-3--creating-the--test--activity}\n\nThe \"Test\" activity lets you determine whether a delivery needs to be sent or whether the monitoring workflow needs to run another cycle based on the \"Wait\" activity.\n\nA delivery is sent to the supervisor **if at least one of the three event variables \"vars.strWorkflowError\", \"vars.strWorkflowPaused\", or \"vars.strWorkflowStop\" is non-void.**\n\n![](assets/uc_monitoring_workflow_test.png)\n\nThe \"Wait\" activity can be configured to re-start the monitoring workflow at regular intervals. For this use case, **the wait time is set to one hour**.\n\n![](assets/uc_monitoring_workflow_attente.png)\n\n## Step 4: Preparing the delivery {#step-4--preparing-the-delivery}\n\nThe \"Delivery\" activity is based on a **delivery template** stored in the **Resources > Templates > Delivery templates** node.\n\nThis template must include:\n\n* **the email address of the supervisor**.\n* **HTML content** for inserting personalized text.\n\n  ![](assets/uc_monitoring_workflow_variables_diffusion.png)\n\n  The three variables declared (WF_Stop, WF_Paused, WF_Error) match the three workflow event variables.\n\n  These variables must be declared in the **Variables** tab of the delivery template properties.\n\n  To recover **the content of the workflow event variables**, you need to declare the variables specific to the delivery that will be initialized with values returned by the JavaScript code.\n\n  The delivery template has the following content:\n\n  ![](assets/uc_monitoring_workflow_model_diffusion.png)\n\nOnce the template has been created and approved, you need to configure the **Delivery** activity to:\n\n* link the \"Delivery\" activity to the delivery template created previously.\n* link the workflow's event variables to those specific to the delivery template.\n\nDouble-click the **Delivery** activity and select the following options:\n\n* Delivery: select **New, created from a template**, and select the delivery template created previously.\n* For the **Recipients and Content** fields, select **Specified in the delivery**.\n* Action to execute: select **Prepare and start**.\n* Uncheck the **Process errors** option.\n\n  ![](assets/uc_monitoring_workflow_optionmodel.png)\n\n* Go to the **Script** tab of the **Delivery** activity, add three **character string** type variables via the personalization field menu. \n\n  ![](assets/uc_monitoring_workflow_selectlinkvariables.png)\n\n  ![](assets/uc_monitoring_workflow_linkvariables.png)\n\n  The three variables declared are:\n\n  ```\n  delivery.variables._var[0].stringValue = vars.strWorkflowError;\n  delivery.variables._var[1].stringValue = vars.strWorkflowPaused;\n  delivery.variables._var[2].stringValue = vars.strWorkflowStop; \n  ```\n\nOnce this monitoring workflow is launched, it sends the following summary to the recipient:\n\n![](assets/uc_monitoring_workflow_mailfinal.png)\n","headers":[["title","Supervising workflows"],["description","Learn how to supervise Campaign workflows"],["feature","Workflows"]],"sections":[{"section":"Use case: supervise your workflows","sectionId":"4ca59e83-e30e-4011-806f-d7e20f44d4c3","paragraphs":["This use case details the creation of a workflow that lets you monitor the status of a set of workflows that are \"paused\", \"stopped\" or \"with errors\".","Its purpose is to:","Use a workflow to monitor a group of business workflows.\nSend a message to a supervisor via a \"delivery\" activity.","To monitor the status of a set of workflows, you need to follow these steps:","Create the monitoring workflow.\nWrite the JavaScript to determine whether workflows are paused, stopped, or with errors.\nCreate the Test activity.\nPrepare the delivery template.","NOTE","In addition to the workflow, Campaign Workflow Heatmap allows you to analyse in details the workflows that are currently running. For more on this, refer to the dedicated section.","For more on how to monitor your workflows' execution, refer to this section."]},{"section":"Step 1: Creating the monitoring workflow","sectionId":"5471a410-5c9d-4d05-9e97-d9c2f40d3feb","paragraphs":["The workflow folder that we are going to monitor is the \"CustomWorkflows\" folder stored in the Administration > Production > Technical workflows node. This folder contains a set of business workflows.","The Monitoring workflow is stored at the root of the Technical Workflows folder. The label used is \"Monitoring\".","The following schema shows the sequence of activities:","This workflow is made up of:","a \"Start\" activity.\na \"JavaScript code\" activity responsible for analyzing the business workflows folder.\na \"Test\" activity to send a delivery to the supervisor or re-start the workflow.\na \"Delivery\" activity responsible for message layout.\na \"Wait\" activity that controls the lead times between workflow iterations."]},{"section":"Step 2: Writing the JavaScript","sectionId":"2414f9e0-efbb-4f01-884e-9f8bf3a8e3f8","paragraphs":["The first part of the JavaScript code coincides with a query (queryDef) that lets you identify the workflows with a \"pause\" (@state == 13), \"error\" (@failed == 1) or \"stopped\" (@state == 20) status.","The internal name of the workflow folder to monitor is given in the following condition:","<condition boolOperator=\"AND\" expr=\"[folder/@name] = 'Folder20'\" internalId=\"1\"/>","var strError = \"\";\nvar strPaused = \"\";\nvar strStop = \"\";","var queryWkfError = xtk.queryDef.create(\n  <queryDef schema=\"xtk:workflow\" operation=\"select\">\n    <select>\n      <node expr=\"@internalName\"/>\n      <node expr=\"@state\"/>\n      <node expr=\"@label\"/>\n      <node expr=\"@failed\"/>\n      <node expr=\"@state\"/>   \n    </select>\n    <where id=\"12837805386\">\n      <condition boolOperator=\"AND\" expr=\"[folder/@name] = 'Folder20'\" internalId=\"1\"/>\n        <condition boolOperator=\"AND\" internalId=\"2\">\n          <condition boolOperator=\"OR\" expr=\"@state = 20\" internalId=\"3\"/>\n          <condition expr=\"@state = 13\" internalId=\"4\"/>\n        </condition>  \n    </where>\n  </queryDef>\n);\nvar ndWkfError = queryWkfError.ExecuteQuery();","The second part of the JavaScript code lets you display a message for each workflow based on the status recovered during the query.","NOTE","The strings created must be loaded in the workflow's event variables.","for each ( var wkf in ndWkfError.workflow ) \n{\n  if ( wkf.@state == 13 )  // Status 13 = paused\n  {\n    if ( wkf.@failed == 1 )\n      strError += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n    else\n      strPaused += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n  }\n  \n  if ( wkf.@state == 20 )  // Status 20 = stop\n    strStop += \"<li>Workflow '\" + wkf.@internalName + \"' with the label '\" + wkf.@label + \"'</li>\";\n}","vars.strWorkflowError = strError;\nvars.strWorkflowPaused = strPaused;\nvars.strWorkflowStop = strStop;"]},{"section":"Step 3: Creating the 'Test' activity","sectionId":"9122b0da-d721-49fd-9f3a-854c39f70069","paragraphs":["The \"Test\" activity lets you determine whether a delivery needs to be sent or whether the monitoring workflow needs to run another cycle based on the \"Wait\" activity.","A delivery is sent to the supervisor if at least one of the three event variables \"vars.strWorkflowError\", \"vars.strWorkflowPaused\", or \"vars.strWorkflowStop\" is non-void.","The \"Wait\" activity can be configured to re-start the monitoring workflow at regular intervals. For this use case, the wait time is set to one hour."]},{"section":"Step 4: Preparing the delivery","sectionId":"d8f1c664-08d6-457e-9e64-cc7b197fd604","paragraphs":["The \"Delivery\" activity is based on a delivery template stored in the Resources > Templates > Delivery templates node.","This template must include:","the email address of the supervisor.","HTML content for inserting personalized text.","The three variables declared (WF_Stop, WF_Paused, WF_Error) match the three workflow event variables.","These variables must be declared in the Variables tab of the delivery template properties.","To recover the content of the workflow event variables, you need to declare the variables specific to the delivery that will be initialized with values returned by the JavaScript code.","The delivery template has the following content:","Once the template has been created and approved, you need to configure the Delivery activity to:","link the \"Delivery\" activity to the delivery template created previously.\nlink the workflow's event variables to those specific to the delivery template.","Double-click the Delivery activity and select the following options:","Delivery: select New, created from a template, and select the delivery template created previously.","For the Recipients and Content fields, select Specified in the delivery.","Action to execute: select Prepare and start.","Uncheck the Process errors option.","Go to the Script tab of the Delivery activity, add three character string type variables via the personalization field menu.","The three variables declared are:","delivery.variables._var[0].stringValue = vars.strWorkflowError;\ndelivery.variables._var[1].stringValue = vars.strWorkflowPaused;\ndelivery.variables._var[2].stringValue = vars.strWorkflowStop;","Once this monitoring workflow is launched, it sends the following summary to the recipient:"]}]}