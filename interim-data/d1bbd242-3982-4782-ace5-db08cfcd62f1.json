{"guid":"d1bbd242-3982-4782-ace5-db08cfcd62f1","title":"Enriching content","path":"help\\delivery\\using\\enriching-content.md","fullText":"---\nproduct: campaign\ntitle: Enriching content\ndescription: Enriching content\nbadge-v8: label=\"Also applies to v8\" type=\"Positive\" tooltip=\"Also applies to Campaign v8\"\nfeature: Data Management\nrole: User, Developer, Data Engineer\nexl-id: a4472a7c-a16b-4d10-a8ca-f74ca5f62de4\n---\n# Enriching content{#enriching-content}\n\nAggregators let you enrich the content with external data. This data comes from generic queries or linked tables.\n\n## Generic queries {#generic-queries}\n\nQueries are configured via the publication template in the **[!UICONTROL Aggregator]** tab.\n\nThe data retrieved will enrich the XML output document via its main element.\n\nExample of return from a query on the recipient schema (**nms:recipient**):\n\n```\n<book name=\"Content Management\">\n  ...\n  <collection-recipient>\n    <recipient lastName=\"Doe\" firstName=\"John\" email=\"john.doe@aolf.com\">\n    ...\n  </collection-recipient>\n</book>\n```\n\nThe **`<collection-recipient>`** element represents the input element of the document resulting from a query. The data retrieved is returned under this element; in our example, a recipient list.\n\n### Adding a query {#adding-a-query}\n\nThe query parameters are edited using a wizard.\n\n1. In the first page, specify the label and the schema containing the data to be retrieved.\n\n   ![](assets/d_ncs_content_query1.png)\n\n   >[!NOTE]\n   >\n   >The edit field **Path** is used to rename the query output element.\n\n1. The next page lets you select the data to retrieve.\n\n   ![](assets/d_ncs_content_query2.png)\n\n1. The next page defines the filter condition.\n\n   ![](assets/d_ncs_content_query3.png)\n\n1. The last page launches a preview of the data returned by the query.\n\n   ![](assets/d_ncs_content_query4.png)\n\n## Linked tables {#linked-tables}\n\nLinks let you retrieve external data linked to the content.\n\nThere are two types of linked data:\n\n* Content links: this is the native content management mode. The content of the link is automatically integrated in the XML output document.\n* Links to external tables give access to all the other tables in the database with the constraint of retrieving the data of the selected link with an aggregator.\n\n### Link to a content schema {#link-to-a-content-schema}\n\nA content link is declared in the data schema as follows:\n\n```\n<element expandSchemaTarget=\"cus:chapter\" label=\"Main chapter\" name=\"mainChapter\" type=\"string\"/>\n```\n\nThe definition of the link is populated on a **string**-type **`<element>`**, and the **expandSchemaTarget** attribute references the target schema (\"cus:chapter\" in our example). The referenced schema must be a content schema.\n\nThe content of the targeted element enriches the link element, i.e. the **`<chapter>`** element in our example schema:\n\n```\n<mainChapter computeString=\"Introduction\" id=\"7011\" title=\"Introduction\" xtkschema=\"cus:chapter\">    \n  <page>Introduction to input <STRONG>forms</STRONG>.</page>\n</mainChapter>\n```\n\n>[!NOTE]\n>\n>The **Compute string** of the link is presented from the **computeString** attribute.\n\nIn the input form, the edit control of the link is declared as follows:\n\n```\n<input type=\"articleEdit\" xpath=\"mainChapter\"/>\n```\n\n![](assets/d_ncs_content_link.png)\n\nThe **[!UICONTROL Magnifier]** icon enables you to open the edit form of the linked element.\n\n#### Link collection {#link-collection}\n\nTo populate a collection of links, add the **unbound=\"true\"** attribute to the definition of the link element in the data schema:\n\n```\n<element expandSchemaTarget=\"cus:chapter\" label=\"List of chapters\" name=\"chapter\"  ordered=\"true\" unbound=\"true\"/>\n```\n\nThe content of the targeted element enriches each collection element:\n\n```\n<chapter computeString=\"Introduction\" id=\"7011\" title=\"Introduction\" xtkschema=\"cus:chapter\">    \n  <page>Introduction to input <STRONG>forms</STRONG>.</page>\n</chapter>\n```\n\nIn the input form, list control is declared as follows:\n\n```\n<input editable=\"false\" nolabel=\"true\" toolbarCaption=\"List of chapters\" type=\"articleList\" xpath=\"chapter\" zoom=\"true\"/>\n```\n\n![](assets/d_ncs_content_link2.png)\n\nA default column is displayed in order to view the **Compute string** of the targeted elements.\n\n### Links to external tables {#links-to-external-tables}\n\nA link to an external table is declared in the data schema as follows:\n\n```\n<element label=\"Main contact\" name=\"mainContact\" target=\"nms:recipient\" type=\"link\"/>\n```\n\nThe definition of the link is populated on a **link**-type **`<element>`**, and the **target** attribute references the target schema (\"nms:recipient\" in our example).\n\nBy convention, links must be declared from the main element of the data schema.\n\nThe **Compute string** and the key of the targeted element enrich the **`<name>-id`** and **`<name>-cs`** attributes on the main element.\n\nIn our example, the link is populated in the \"cus:book\" schema, the content of the link data is contained in the \"mainContact-id\" and \"mainContact-cs\" attributes:\n\n```\n<book computeString=\"Content management\" date=\"2006/06/08\" id=\"6106\" language=\"en\" mainContact-cs=\"John Doe (john.doe@adobe.com)\" mainContact-id=\"3012\" name=\"Content management\" xtkschema=\"cus:book\">\n\n```\n\nLink edit control is declared as follows:\n\n```\n<input xpath=\"mainContact\"/>\n```\n\n![](assets/d_ncs_content_link3.png)\n\nYou can restrict the choice of target elements by adding the **`<sysfilter>`** element via the link definition in the input form:\n\n```\n<input xpath=\"mainContact\">\n  <!-- Filter the selection of the link on the Adobe domain -->\n  <sysFilter>\n    <condition expr=\"@domain =  'adobe.com '\"/>\n  </sysFilter>\n</input>\n```\n\n>[!NOTE]\n>\n>This restriction also applies to content links.\n\n#### Link collection {#link-collection-1}\n\nThe definition of the collection is identical to the definition of a list on collection elements:\n\n```\n<element label=\"List of contacts\" name=\"contact\" unbound=\"true\">\n  <element label=\"Recipient\" name=\"recipient\" target=\"nms:recipient\" type=\"link\"/>\n</element>\n```\n\nIn the input form, list control is declared as follows:\n\n```\n<input nolabel=\"true\" toolbarCaption=\"List of contacts\" type=\"list\" xpath=\"contact\">\n  <input xpath=\"recipient\"/>\n</input>\n```\n\n![](assets/d_ncs_content_link4.png)\n\n>[!NOTE]\n>\n>The list is editable and lets you select the link from a \"link\"-type control presented above.\n\nThe content of the targeted element enriches each collection element in the output document:\n\n```\n<contact id=\"11504978621\" recipient-cs=\"Doe John (john.doe@adobe.com)\" recipient-id=\"3012\"/>\n<contact id=\"11504982510\" recipient-cs=\"Martinez Peter (peter.martinez@adobe.com)\" recipient-id=\"3013\"/>\n```\n\n#### Link aggregation {#link-aggregation}\n\nThe content of each link referenced is limited to the internal key and the **Compute string** of the targeted element.\n\nA JavaScript script is used to enrich the content of the links via SOAP queries.\n\n**Example**: Adding the recipient name to the \"mainContact\" link and the \"contact\" collection links:\n\n```\n// Update <mainContact> link\nvar mainContactId = content.@['mainContact-id']\nvar query = xtk.queryDef.create(\n    <queryDef schema=\"nms:recipient\" operation=\"get\">\n      <select>\n        <node expr=\"@lastName\"/>\n      </select>\n      <where>\n        <condition expr={\"@id=\"+mainContactId}/>\n      </where>\n    </queryDef>)\n\nvar recipient = query.ExecuteQuery()\ncontent.mainContact.@lastName = recipient.@lastName\n\n// Update <contact> link collection\nfor each(var contact in content.contact)\n{\n  var contactId = contact.@['recipient-id']\n  var query = xtk.queryDef.create(\n    <queryDef schema=\"nms:recipient\" operation=\"get\">\n      <select>\n        <node expr=\"@lastName\"/>\n      </select>\n      <where>\n        <condition expr={\"@id=\"+contactId}/>\n      </where>\n    </queryDef>\n  )\n  \n  var recipient = query.ExecuteQuery()\n  contact.@lastName = recipient.@lastName\n}\n\n```\n\nThe result obtained after script execution:\n\n```\n<mainContact lastName=\"Doe\"/>\n\n<contact id=\"11504978621\" lastName=\"Doe\" recipient-cs=\"Doe John (john.doe@adobe.com)\" recipient-id=\"3012\"/>  \n<contact id=\"11504982510\" lastName=\"Martinez\" recipient-cs=\"Martinez Peter (peter.martinez@adobe.com)\" recipient-id=\"3013\"/> \n\n```\n\nThe content of the JavaScript code is added via the **[!UICONTROL Administration > Configuration > Content management > JavaScript Codes]** folder and must be populated in the publication template for each transformation.\n\n![](assets/d_ncs_content_link5.png)\n","headers":[["title","Enriching content"],["description","Enriching content"],["feature","Data Management"]],"sections":[{"section":"Enriching content","sectionId":"dca0f3fe-ab1a-4529-8fe7-791b7afb57a6","paragraphs":["Aggregators let you enrich the content with external data. This data comes from generic queries or linked tables."]},{"section":"Generic queries","sectionId":"5cbb2662-42fb-42fe-9af5-5fe60ddbbe99","paragraphs":["Queries are configured via the publication template in the Aggregator tab.","The data retrieved will enrich the XML output document via its main element.","Example of return from a query on the recipient schema (nms:recipient):","<book name=\"Content Management\">\n  ...\n  <collection-recipient>\n    <recipient lastName=\"Doe\" firstName=\"John\" email=\"john.doe@aolf.com\">\n    ...\n  </collection-recipient>\n</book>","The <collection-recipient> element represents the input element of the document resulting from a query. The data retrieved is returned under this element; in our example, a recipient list."]},{"section":"Adding a query","sectionId":"7b812e8d-3e40-47cc-8469-77319c73b23f","paragraphs":["The query parameters are edited using a wizard.","In the first page, specify the label and the schema containing the data to be retrieved.","NOTE","The edit field Path is used to rename the query output element.","The next page lets you select the data to retrieve.","The next page defines the filter condition.","The last page launches a preview of the data returned by the query."]},{"section":"Linked tables","sectionId":"acad7fdb-91ee-4ddd-a04f-33c7382b362e","paragraphs":["Links let you retrieve external data linked to the content.","There are two types of linked data:","Content links: this is the native content management mode. The content of the link is automatically integrated in the XML output document.\nLinks to external tables give access to all the other tables in the database with the constraint of retrieving the data of the selected link with an aggregator."]},{"section":"Link to a content schema","sectionId":"5b785911-900a-452f-9f71-6954e2473b66","paragraphs":["A content link is declared in the data schema as follows:","<element expandSchemaTarget=\"cus:chapter\" label=\"Main chapter\" name=\"mainChapter\" type=\"string\"/>","The definition of the link is populated on a string-type <element>, and the expandSchemaTarget attribute references the target schema (\"cus:chapter\" in our example). The referenced schema must be a content schema.","The content of the targeted element enriches the link element, i.e. the <chapter> element in our example schema:","<mainChapter computeString=\"Introduction\" id=\"7011\" title=\"Introduction\" xtkschema=\"cus:chapter\">    \n  <page>Introduction to input <STRONG>forms</STRONG>.</page>\n</mainChapter>","NOTE","The Compute string of the link is presented from the computeString attribute.","In the input form, the edit control of the link is declared as follows:","<input type=\"articleEdit\" xpath=\"mainChapter\"/>","The Magnifier icon enables you to open the edit form of the linked element."]},{"section":"Link collection","sectionId":"46585f0e-d1e9-495e-a758-ea095fa7077b","paragraphs":["To populate a collection of links, add the unbound=\"true\" attribute to the definition of the link element in the data schema:","<element expandSchemaTarget=\"cus:chapter\" label=\"List of chapters\" name=\"chapter\"  ordered=\"true\" unbound=\"true\"/>","The content of the targeted element enriches each collection element:","<chapter computeString=\"Introduction\" id=\"7011\" title=\"Introduction\" xtkschema=\"cus:chapter\">    \n  <page>Introduction to input <STRONG>forms</STRONG>.</page>\n</chapter>","In the input form, list control is declared as follows:","<input editable=\"false\" nolabel=\"true\" toolbarCaption=\"List of chapters\" type=\"articleList\" xpath=\"chapter\" zoom=\"true\"/>","A default column is displayed in order to view the Compute string of the targeted elements."]},{"section":"Links to external tables","sectionId":"5d0a3b34-4f50-4870-9daf-155c381a6b3c","paragraphs":[]},{"section":"Link collection","sectionId":"72fb9389-eaf0-4d11-97ba-70a2c7e03175","paragraphs":["To populate a collection of links, add the unbound=\"true\" attribute to the definition of the link element in the data schema:","<element expandSchemaTarget=\"cus:chapter\" label=\"List of chapters\" name=\"chapter\"  ordered=\"true\" unbound=\"true\"/>","The content of the targeted element enriches each collection element:","<chapter computeString=\"Introduction\" id=\"7011\" title=\"Introduction\" xtkschema=\"cus:chapter\">    \n  <page>Introduction to input <STRONG>forms</STRONG>.</page>\n</chapter>","In the input form, list control is declared as follows:","<input editable=\"false\" nolabel=\"true\" toolbarCaption=\"List of chapters\" type=\"articleList\" xpath=\"chapter\" zoom=\"true\"/>","A default column is displayed in order to view the Compute string of the targeted elements.","Links to external tables","A link to an external table is declared in the data schema as follows:","<element label=\"Main contact\" name=\"mainContact\" target=\"nms:recipient\" type=\"link\"/>","The definition of the link is populated on a link-type <element>, and the target attribute references the target schema (\"nms:recipient\" in our example).","By convention, links must be declared from the main element of the data schema.","The Compute string and the key of the targeted element enrich the <name>-id and <name>-cs attributes on the main element.","In our example, the link is populated in the \"cus:book\" schema, the content of the link data is contained in the \"mainContact-id\" and \"mainContact-cs\" attributes:","<book computeString=\"Content management\" date=\"2006/06/08\" id=\"6106\" language=\"en\" mainContact-cs=\"John Doe (john.doe@adobe.com)\" mainContact-id=\"3012\" name=\"Content management\" xtkschema=\"cus:book\">","Link edit control is declared as follows:","<input xpath=\"mainContact\"/>","You can restrict the choice of target elements by adding the <sysfilter> element via the link definition in the input form:","<input xpath=\"mainContact\">\n  <!-- Filter the selection of the link on the Adobe domain -->\n  <sysFilter>\n    <condition expr=\"@domain =  'adobe.com '\"/>\n  </sysFilter>\n</input>","NOTE","This restriction also applies to content links.","Link collection","The definition of the collection is identical to the definition of a list on collection elements:","<element label=\"List of contacts\" name=\"contact\" unbound=\"true\">\n  <element label=\"Recipient\" name=\"recipient\" target=\"nms:recipient\" type=\"link\"/>\n</element>","In the input form, list control is declared as follows:","<input nolabel=\"true\" toolbarCaption=\"List of contacts\" type=\"list\" xpath=\"contact\">\n  <input xpath=\"recipient\"/>\n</input>","NOTE","The list is editable and lets you select the link from a \"link\"-type control presented above.","The content of the targeted element enriches each collection element in the output document:","<contact id=\"11504978621\" recipient-cs=\"Doe John (john.doe@adobe.com)\" recipient-id=\"3012\"/>\n<contact id=\"11504982510\" recipient-cs=\"Martinez Peter (peter.martinez@adobe.com)\" recipient-id=\"3013\"/>"]},{"section":"Link aggregation","sectionId":"ed664e83-8557-4eaf-a453-ba0e0e28773c","paragraphs":["The content of each link referenced is limited to the internal key and the Compute string of the targeted element.","A JavaScript script is used to enrich the content of the links via SOAP queries.","Example: Adding the recipient name to the \"mainContact\" link and the \"contact\" collection links:","// Update <mainContact> link\nvar mainContactId = content.@['mainContact-id']\nvar query = xtk.queryDef.create(\n    <queryDef schema=\"nms:recipient\" operation=\"get\">\n      <select>\n        <node expr=\"@lastName\"/>\n      </select>\n      <where>\n        <condition expr=/>\n      </where>\n    </queryDef>)","var recipient = query.ExecuteQuery()\ncontent.mainContact.@lastName = recipient.@lastName","// Update <contact> link collection\nfor each(var contact in content.contact)\n{\n  var contactId = contact.@['recipient-id']\n  var query = xtk.queryDef.create(\n    <queryDef schema=\"nms:recipient\" operation=\"get\">\n      <select>\n        <node expr=\"@lastName\"/>\n      </select>\n      <where>\n        <condition expr=/>\n      </where>\n    </queryDef>\n  )\n  \n  var recipient = query.ExecuteQuery()\n  contact.@lastName = recipient.@lastName\n}","The result obtained after script execution:","<mainContact lastName=\"Doe\"/>","<contact id=\"11504978621\" lastName=\"Doe\" recipient-cs=\"Doe John (john.doe@adobe.com)\" recipient-id=\"3012\"/>  \n<contact id=\"11504982510\" lastName=\"Martinez\" recipient-cs=\"Martinez Peter (peter.martinez@adobe.com)\" recipient-id=\"3013\"/>","The content of the JavaScript code is added via the Administration > Configuration > Content management > JavaScript Codes folder and must be populated in the publication template for each transformation."]}]}