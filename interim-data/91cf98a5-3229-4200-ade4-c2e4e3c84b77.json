{"guid":"91cf98a5-3229-4200-ade4-c2e4e3c84b77","title":"Create the script","path":"help\\delivery\\using\\a-b-testing-uc-script.md","fullText":"---\nproduct: campaign\ntitle: Create the script\ndescription: Learn how to perform A/B testing through a dedicated use case\nbadge-v8: label=\"Also applies to v8\" type=\"Positive\" tooltip=\"Also applies to Campaign v8\"\nfeature: A/B Testing\nrole: User\nexl-id: 4143d1b7-0e2b-4672-ad57-e4d7f8fea028\n---\n# AB testing: Create the script {#step-5--creating-the-script}\n\n\nThe choice of the delivery content destined for the remaining population is calculated by a script. This script recovers the information concerning the delivery with the highest rate of opens and copies the content into the final delivery.\n\n## Example of a script {#example-of-a-script}\n\nThe following script can be used as is in the targeting workflow. For more on this, refer to [this section](#implementation).\n\n```\n // query the database to find the winner (best open rate)\n   var winner = xtk.queryDef.create(\n     <queryDef schema=\"nms:delivery\" operation=\"get\">\n       <select>\n         <node expr=\"@id\"/>\n         <node expr=\"@label\"/>\n         <node expr=\"[@operation-id]\"/>\n         <node expr=\"[@workflow-id]\"/>\n       </select>\n       <where>\n         <condition expr={\"@FCP=0 and [@workflow-id]= \" + instance.id}/>\n       </where>\n       <orderBy>\n         <node expr=\"[indicators/@estimatedRecipientOpenRatio]\" sortDesc=\"true\"/>\n       </orderBy>\n     </queryDef>).ExecuteQuery()\n   \n   // create a new delivery object and initialize it by doing a copy of\n   // the winner delivery\n   var delivery = nms.delivery.create()\n   delivery.Duplicate(\"nms:delivery|\" + winner.@id)\n\n   // append 'final' to the delivery label\n   delivery.label = winner.@label + \" final\"\n\n   // link the delivery to the operation to make sure it will be displayed in\n   // the campaign dashboard. This attribute needs to be set manually here since \n   // the Duplicate() method has reset it to its default value => 0\n   delivery.operation_id = winner.@[\"operation-id\"]\n   delivery.workflow_id = winner.@[\"workflow-id\"]\n\n   // adjust some delivery parameters to make it compatible with the \n   // \"Prepare and start\" option selected in the Delivery tab of this activity\n   delivery.scheduling.validationMode = \"manual\"\n   delivery.scheduling.delayed = 0\n \n   // save the delivery in database\n   delivery.save()\n \n   // store the new delivery Id in event variables\n   vars.deliveryId = delivery.id\n```\n\nFor a detailed explanation of the script, refer to [this section](#details-of-the-script).\n\n## Implementation {#implementation}\n\n1. Open your **[!UICONTROL JavaScript code]** activity.\n1. Copy the script offered in [Example of a script](#example-of-a-script) into the **[!UICONTROL JavaScript code]** window.\n\n   ![](assets/use_case_abtesting_configscript_002.png)\n\n1. In the **[!UICONTROL Label]** field, enter the name of the script, i.e.\n\n   ```\n   <%= vars.deliveryId %>\n   ```\n\n   ![](assets/use_case_abtesting_configscript_003.png)\n\n1. Close the **[!UICONTROL JavaScript code]** activity.\n1. Save your workflow.\n\n## Details of the script {#details-of-the-script}\n\nThis section details the various parts of the script and their operating mode.\n\n* The first part of the script is a query. The **queryDef** command lets you recover from the **NmsDelivery** table the deliveries created by executing the targeting workflow and to sort them based on their estimated rate of opens, then the information from the delivery with the highest rate of opens is recovered.\n\n  ```\n  // query the database to find the winner (best open rate)\n     var winner = xtk.queryDef.create(\n       <queryDef schema=\"nms:delivery\" operation=\"get\">\n         <select>\n           <node expr=\"@id\"/>\n           <node expr=\"@label\"/>\n           <node expr=\"[@operation-id]\"/>\n         </select>\n         <where>\n           <condition expr={\"@FCP=0 and [@workflow-id]= \" + instance.id}/>\n         </where>\n         <orderBy>\n           <node expr=\"[indicators/@estimatedRecipientOpenRatio]\" sortDesc=\"true\"/>\n         </orderBy>\n       </queryDef>).ExecuteQuery()\n  ```\n\n* The delivery with the highest rate of opens is duplicated.\n\n  ```\n   // create a new delivery object and initialize it by doing a copy of\n   // the winner delivery\n  var delivery = nms.delivery.create()\n  delivery.Duplicate(\"nms:delivery|\" + winner.@id)\n  ```\n\n* The label of the duplicated delivery is modified, and the word **final** is added to it.\n\n  ```\n  // append 'final' to the delivery label\n  delivery.label = winner.@label + \" final\"\n  ```\n\n* The delivery is copied into the campaign dashboard.\n\n  ```\n  // link the delivery to the operation to make sure it will be displayed in\n  // the campaign dashboard. This attribute needs to be set manually here since \n  // the Duplicate() method has reset it to its default value => 0\n  delivery.operation_id = winner.@[\"operation-id\"]\n  delivery.workflow_id = winner.@[\"workflow-id\"]\n  ```\n\n  ```\n  // adjust some delivery parameters to make it compatible with the \n  // \"Prepare and start\" option selected in the Delivery tab of this activity\n  delivery.scheduling.validationMode = \"manual\"\n  delivery.scheduling.delayed = 0\n  ```\n\n* The delivery is saved in the database.\n\n  ```\n  // save the delivery in database\n  delivery.save()\n  ```\n\n* The unique identifier of the duplicated delivery is stored in the workflow variable.\n\n  ```\n  // store the new delivery Id in event variables\n  vars.deliveryId = delivery.id\n  ```\n\n## Other selection criteria {#other-selection-criteria}\n\nThe example above lets you select the content of a delivery based on the rate of opens of emails. You can adapt it to base yourself on other delivery-specific indicators:\n\n* Best click throughput: `[indicators/@recipientClickRatio]`,\n* Highest reactivity rate (email open and clicks in the message): `[indicators/@reactivity]`,\n* Lowest complaint rate: `[indicators/@refusedRatio]` (use the false value for the sortDesc attribute),\n* Highest conversion rate: `[indicators/@transactionRatio]`,\n* Number of pages visited following the reception of a message: `[indicators/@totalWebPage]`,\n* Lowest unsubscription rate: `[indicators/@optOutRatio]`,\n* Transaction amount: `[indicators/@amount]`.\n\nYou can now define the final delivery. [Learn more](a-b-testing-uc-final-delivery.md).\n","headers":[["title","Create the script"],["description","Learn how to perform A/B testing through a dedicated use case"],["feature","A/B Testing"]],"sections":[{"section":"AB testing: Create the script","sectionId":"6d6433ca-d2da-4cea-9d4e-9a65baffebd8","paragraphs":["The choice of the delivery content destined for the remaining population is calculated by a script. This script recovers the information concerning the delivery with the highest rate of opens and copies the content into the final delivery."]},{"section":"Example of a script","sectionId":"ded8fbd5-e272-4c29-bf4f-0fe8134be7e0","paragraphs":["The following script can be used as is in the targeting workflow. For more on this, refer to this section.","// query the database to find the winner (best open rate)\n   var winner = xtk.queryDef.create(\n     <queryDef schema=\"nms:delivery\" operation=\"get\">\n       <select>\n         <node expr=\"@id\"/>\n         <node expr=\"@label\"/>\n         <node expr=\"[@operation-id]\"/>\n         <node expr=\"[@workflow-id]\"/>\n       </select>\n       <where>\n         <condition expr=/>\n       </where>\n       <orderBy>\n         <node expr=\"[indicators/@estimatedRecipientOpenRatio]\" sortDesc=\"true\"/>\n       </orderBy>\n     </queryDef>).ExecuteQuery()\n   \n   // create a new delivery object and initialize it by doing a copy of\n   // the winner delivery\n   var delivery = nms.delivery.create()\n   delivery.Duplicate(\"nms:delivery|\" + winner.@id)","// append 'final' to the delivery label\n   delivery.label = winner.@label + \" final\"","// link the delivery to the operation to make sure it will be displayed in\n   // the campaign dashboard. This attribute needs to be set manually here since \n   // the Duplicate() method has reset it to its default value => 0\n   delivery.operation_id = winner.@[\"operation-id\"]\n   delivery.workflow_id = winner.@[\"workflow-id\"]","// adjust some delivery parameters to make it compatible with the \n   // \"Prepare and start\" option selected in the Delivery tab of this activity\n   delivery.scheduling.validationMode = \"manual\"\n   delivery.scheduling.delayed = 0\n \n   // save the delivery in database\n   delivery.save()\n \n   // store the new delivery Id in event variables\n   vars.deliveryId = delivery.id","For a detailed explanation of the script, refer to this section."]},{"section":"Implementation","sectionId":"e2de3bda-0d9d-4ee7-98e9-bceabb48cbdb","paragraphs":["Open your JavaScript code activity.","Copy the script offered in Example of a script into the JavaScript code window.","In the Label field, enter the name of the script, i.e.","<%= vars.deliveryId %>","Close the JavaScript code activity.","Save your workflow."]},{"section":"Details of the script","sectionId":"f34c83ae-0544-4312-9bd7-409aeff8ab67","paragraphs":["This section details the various parts of the script and their operating mode.","The first part of the script is a query. The queryDef command lets you recover from the NmsDelivery table the deliveries created by executing the targeting workflow and to sort them based on their estimated rate of opens, then the information from the delivery with the highest rate of opens is recovered.","// query the database to find the winner (best open rate)\n   var winner = xtk.queryDef.create(\n     <queryDef schema=\"nms:delivery\" operation=\"get\">\n       <select>\n         <node expr=\"@id\"/>\n         <node expr=\"@label\"/>\n         <node expr=\"[@operation-id]\"/>\n       </select>\n       <where>\n         <condition expr=/>\n       </where>\n       <orderBy>\n         <node expr=\"[indicators/@estimatedRecipientOpenRatio]\" sortDesc=\"true\"/>\n       </orderBy>\n     </queryDef>).ExecuteQuery()","The delivery with the highest rate of opens is duplicated.","// create a new delivery object and initialize it by doing a copy of\n // the winner delivery\nvar delivery = nms.delivery.create()\ndelivery.Duplicate(\"nms:delivery|\" + winner.@id)","The label of the duplicated delivery is modified, and the word final is added to it.","// append 'final' to the delivery label\ndelivery.label = winner.@label + \" final\"","The delivery is copied into the campaign dashboard.","// link the delivery to the operation to make sure it will be displayed in\n// the campaign dashboard. This attribute needs to be set manually here since \n// the Duplicate() method has reset it to its default value => 0\ndelivery.operation_id = winner.@[\"operation-id\"]\ndelivery.workflow_id = winner.@[\"workflow-id\"]","// adjust some delivery parameters to make it compatible with the \n// \"Prepare and start\" option selected in the Delivery tab of this activity\ndelivery.scheduling.validationMode = \"manual\"\ndelivery.scheduling.delayed = 0","The delivery is saved in the database.","// save the delivery in database\ndelivery.save()","The unique identifier of the duplicated delivery is stored in the workflow variable.","// store the new delivery Id in event variables\nvars.deliveryId = delivery.id"]},{"section":"Other selection criteria","sectionId":"06c1f080-8b83-4332-8458-c61e1aa64b7e","paragraphs":["The example above lets you select the content of a delivery based on the rate of opens of emails. You can adapt it to base yourself on other delivery-specific indicators:","Best click throughput: [indicators/@recipientClickRatio],\nHighest reactivity rate (email open and clicks in the message): [indicators/@reactivity],\nLowest complaint rate: [indicators/@refusedRatio] (use the false value for the sortDesc attribute),\nHighest conversion rate: [indicators/@transactionRatio],\nNumber of pages visited following the reception of a message: [indicators/@totalWebPage],\nLowest unsubscription rate: [indicators/@optOutRatio],\nTransaction amount: [indicators/@amount].","You can now define the final delivery. Learn more."]}]}