{"guid":"aaa9a582-a3bc-4aeb-88c7-c890da0ff01a","title":"Coordinate data updates","path":"help\\workflow\\using\\coordinating-data-updates.md","fullText":"---\nproduct: campaign\ntitle: Coordinate data updates\ndescription: Coordinate data updates\nfeature: Workflows, Data Management\nexl-id: 9959e22e-9aa0-410f-b22c-9ca1cac46b97\n---\n# Coordinate data updates{#coordinating-data-updates}\n\n\n\nThis use case details the creation of a workflow which lets you manage concomitant updates when using several executions of a workflow.\n\nThe aim is to check that the update process has ended before executing another update operation. To do this, we will set up an instance variable, and let the workflow test if the instance is running to decide whether or not to continue the execution of the workflow and perform the update.\n\n![](assets/uc_dataupdate_wkf.png)\n\nThis workflow is made up of:\n\n* a **Scheduler** activity, that executes the workflow on a specific frequency.\n* a **Test** activity that checks if the workflow is already executing.\n* **Query** and **Update data** activities in case the workflow is not already executing, followed by an **End** activity that reinitializes the workflow instance variable to false.\n* An **End** activity if the workflow is already executing.\n\nTo build the workflow, follow the steps below:\n\n1. Add a **Scheduler** activity, then configure its frequency according to your needs.\n1. Add a **Test** activity to check if the workflow is already executing, then configure it as below.\n\n   >[!NOTE]\n   >\n   >\"isRunning\" is the instance variable name we have chosen for this example. This is not a built-in variable.\n\n   ![](assets/uc_dataupdate_test.png)\n\n1. Add an **End** activity to the **No** fork. This way, nothing will be executed if the workflow is already executing.\n1. Add the desired activities to the **Yes** fork. In our case, **Query** and **Update Data** activities.\n1. Open the first activity, then add the **instance.vars.isRunning = true** command in the **[!UICONTROL Advanced]** tab. This way, the instance variable is set as running.\n\n   ![](assets/uc_dataupdate_query.png)\n\n1. Add an **End** activity at the end of the **[!UICONTROL Yes]** fork, then add the **instance.vars.isRunning = false** command in the **[!UICONTROL Advanced]** tab.\n\n   This way, no action will be executed as long the workflow is executing.\n\n   ![](assets/uc_dataupdate_end.png)\n\n**Related topics:**\n\n* [Prevent simultaneous multiple executions](monitoring-workflow-execution.md#preventing-simultaneous-multiple-executions)\n* [Update Data activity](update-data.md)\n","headers":[["title","Coordinate data updates"],["description","Coordinate data updates"],["feature","Workflows, Data Management"]],"sections":[{"section":"Coordinate data updates","sectionId":"f30efb48-d295-4803-9109-c1955a7d9862","paragraphs":["This use case details the creation of a workflow which lets you manage concomitant updates when using several executions of a workflow.","The aim is to check that the update process has ended before executing another update operation. To do this, we will set up an instance variable, and let the workflow test if the instance is running to decide whether or not to continue the execution of the workflow and perform the update.","This workflow is made up of:","a Scheduler activity, that executes the workflow on a specific frequency.\na Test activity that checks if the workflow is already executing.\nQuery and Update data activities in case the workflow is not already executing, followed by an End activity that reinitializes the workflow instance variable to false.\nAn End activity if the workflow is already executing.","To build the workflow, follow the steps below:","Add a Scheduler activity, then configure its frequency according to your needs.","Add a Test activity to check if the workflow is already executing, then configure it as below.","NOTE","\"isRunning\" is the instance variable name we have chosen for this example. This is not a built-in variable.","Add an End activity to the No fork. This way, nothing will be executed if the workflow is already executing.","Add the desired activities to the Yes fork. In our case, Query and Update Data activities.","Open the first activity, then add the instance.vars.isRunning = true command in the Advanced tab. This way, the instance variable is set as running.","Add an End activity at the end of the Yes fork, then add the instance.vars.isRunning = false command in the Advanced tab.","This way, no action will be executed as long the workflow is executing.","Related topics:","Prevent simultaneous multiple executions\nUpdate Data activity"]}]}