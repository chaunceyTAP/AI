{"guid":"4c134494-2431-4248-9444-58cf87b1fb50","title":"Workflow best practices","path":"help\\workflow\\using\\workflow-best-practices.md","fullText":"---\nproduct: campaign\ntitle: Workflow best practices\ndescription: Learn Campaign Workflow best practices\nfeature: Workflows\nexl-id: 39c57f61-2629-4214-91e4-cb97dc039deb\n---\n# Workflow best practices{#workflow-best-practices}\n\n\n\n## Execution and performance {#execution-and-performance}\n\nBelow are listed general guidelines about optimizing Campaign performance, including best practices to apply to your workflows. \n\nTroubleshooting guidelines related to workflows execution are also available in [Campaign Classic v7 Production Guide](../../production/using/workflow-execution.md).\n\n### Logs {#logs}\n\nThe JavaScript method **[!UICONTROL logInfo()]** is a great solution for debugging a workflow. It is useful but it must be used carefully, especially for activities that are frequently run: it can overload the logs and significantly increase the size of the log table. But you might also need more than **[!UICONTROL logInfo()]**.\n\nTwo additional solutions are available to help:\n\n* **Keep the result of interim populations between two executions**\n\n  This option keeps temporary tables between two executions of a workflow. It is available in the workflow properties' **[!UICONTROL General]** tab, and can be used for development and test purpose to monitor data and check results. You can use this option in development environments, but never use it on production environments. Keeping temporary tables could result in the size of the database increasing significantly and eventually the size limit being reached. Moreover, it will slow down the backup.\n\n  Only the working tables of the last execution of the workflow are kept. Working tables from previous executions are purged by the **[!UICONTROL cleanup]** workflow, which runs on a daily basis.\n\n  >[!CAUTION]\n  >\n  >This option must never be checked in a production workflow. This option is used to analyze the results and is designed only for testing purposes and hence must be used only on development or staging environments.\n\n* **Log SQL queries in the journal**\n\n  Available in the **[!UICONTROL Execution]** tab of workflow properties, this option will log all SQL queries generated by the tool from the different activities. It is a good way to see what is actually executed by the platform. However, this option should only be used temporarily during development and not activated on production.\n\nPurge the logs when they are not needed anymore. Workflow history is not purged automatically: all messages are kept by default. History can be purged via the **[!UICONTROL File > Actions]** menu or by clicking the Actions button located in the toolbar above the list. Select Purge history.\nTo learn how to purge your logs, refer to this [documentation](starting-a-workflow.md).\n\n### Workflow planning {#workflow-planning}\n\n* Try to maintain a stable level of activity along the day and avoid peaks to prevent the instance from overload. To do so, distribute workflow starting times evenly throughout the day.\n* Schedule data load overnight to reduce resource contention.\n* Long workflows can potentially have an impact on the server and database resources. Split the longest workflows to reduce processing time.\n* To reduce overall run times, replace time-consuming activities with simplified and faster activities.\n* Avoid running more than 20 workflows simultaneously. When too many workflows are executed at the same time, the system can run out of resources and become unstable. For more information on why your workflow may not be starting, refer to this [article](https://helpx.adobe.com/ie/campaign/kb/workflows-not-starting-in-a-campaign-technical-workflows.html).\n\n\n### Execute in the engine option {#execute-in-the-engine-option}\n\nIn the **[!UICONTROL Workflow properties]** window, never check the **[!UICONTROL Execute in the engine]** option. When this option is enabled, the workflow takes priority and all other workflows are stopped by the workflow engine until this one is finished.\n\n![](assets/wf-execute-in-engine.png)\n\n## Workflow properties {#workflow-properties}\n\n### Workflow folders {#workflow-folders}\n\nAdobe recommends you to create your workflows in a dedicated folder.\n\nIf the workflow affects the whole platform (cleansing processes for example), you can consider adding a sub-folder in the built-in **[!UICONTROL Technical Workflows]** folder.\n\n### Workflow naming {#workflow-naming}\n\nBecause it makes them easier to find and troubleshoot if they are not performing in the expected ways, Adobe recommends to give your workflows proper names and labels: fill in the workflow's description field to summarize the process to be performed so that the operator can easily understand it.\n\nIf the workflow is part of a process involving multiple workflows, you can be explicit when entering a label; using numbers is a great way to order the workflows (by Label).\n\nFor example:\n\n* 001 - Import - Import recipients\n* 002 - Import - Import sales\n* 003 - Import - Import sales details\n* 010 - Export - Export delivery logs\n* 011 - Export - Export tracking logs\n\n### Workflow severity {#workflow-severity}\n\nYou can configure the severity of a workflow in the workflow properties, in the **[!UICONTROL Execution]** tab:\n\n* Normal\n* Production\n* Critical\n\nProviding this information when creating a workflow will help you understand the severity of the process configured.\n\nThis option has no functional impact on workflows other than campaign workflows.\n\nCampaign workflows (workflows created as part of a campaign/operation) with a higher severity are executed in priority in case the campaign has many processes supposed to run simultaneously. By default, only 10 processes can run simultaneously in a campaign, according to the option NmsOperation_LimitConcurrency. For example, if a campaign contains 25 workflows, workflows with a higher severity will then be executed in the first pool of 10 processes.\n\n### Workflow monitoring {#workflow-monitoring}\n\nAll your scheduled workflows running on production environments should be monitored in order to be alerted if there is an error.\n\nIn the workflow properties, select a Supervisor group, either the default **[!UICONTROL Workflow supervisors]** or a custom group. Make sure that at least one operator belongs to this group, with an email set up.\n\nBefore you start building a workflow, remember to define workflow supervisors. They will be notified by email in case of errors. For more on this, refer to [Managing errors](monitoring-workflow-execution.md#managing-errors).\n\nRegularly check the **[!UICONTROL Monitoring]** tab to view the overall status of the active workflows. For more on this, refer to [Instance supervision](monitoring-workflow-execution.md#instance-supervision).\n\nThe Workflow HeatMap enables the Adobe Campaign platform administrators to monitor the load on the instance and plan workflows accordingly. For more on this, refer to [Workflow monitoring](heatmap.md).\n\n## Using activities {#using-activities}\n\n>[!CAUTION]\n>\n>You can copy and paste activities within a same workflow. However, we do not recommend to copy paste activities across different workflows. Some settings attached to activities like Deliveries and Scheduler could lead to conflicts and errors while executing the destination workflow. Instead, we recommended you to  **Duplicate** workflows. For more information, see [Duplicating workflows](building-a-workflow.md#duplicating-workflows).\n\n### Name of the activity {#name-of-the-activity}\n\nWhile developing your workflow, all activities will have a name, as will all Adobe Campaign objects. While the name is generated by the tool, we recommend you rename it with an explicit name when configuring it. The risk with doing it later is that it may interrupt the workflow with activities using the name of another previous activity. So it would be a difficult job to update the names afterward.\n\nThe activity name can be found in the **[!UICONTROL Advanced]** tab. Don't leave them named **[!UICONTROL query]**, **[!UICONTROL query1]**, **[!UICONTROL query11]**, but give them explicit names such as **[!UICONTROL querySubscribedRecipients]**. This name will show up in the journal, and if applicable in the SQL logs, and this will help to debug the workflow when configuring it.\n\n### First and last activities {#first-and-last-activities}\n\n* Always start your workflow with a **[!UICONTROL Start]** activity or a **[!UICONTROL Scheduler]** activity. When relevant, you can also use an **[!UICONTROL External signal]** activity.\n* When building your workflow, only use one **[!UICONTROL Scheduler]** activity per branch. If the same branch of a workflow has several schedulers (linked to each other), the number of tasks to be executed will be multiplied exponentially, which would considerably overload the database. This rule also applies to all activities with a **[!UICONTROL Scheduling & History]** tab. Learn more on [Scheduling](scheduler.md).\n\n  ![](assets/wf-scheduler.png)\n\n* Use **[!UICONTROL End]** activities for every workflow. This lets Adobe Campaign free up temporary space used for calculations within workflows. For more on this, refer to: [Start and end](start-and-end.md).\n\n### Javascript within an activity {#javascript-within-an-activity}\n\nYou may want to add JavaScript when initializing a workflow activity. This can be done in an activity's **[!UICONTROL Advanced]** tab of the activity.\n\nTo make spotting the workflow easier, we recommend using double dashes at the start and end of the activity label as follows: -- My label --.\n\n### Signal {#signal}\n\nMost of the time, you will not know where the signal is called from. In order to avoid this problem, use the **[!UICONTROL Comment]** field within the **[!UICONTROL Advanced]** tab of the signal activity to document the expected origin of a signal for this activity.\n\n![](assets/workflow-signal-bp.png)\n\n## Workflow update {#workflow-update}\n\nA production workflow should not be updated directly. Unless the process consists of creating a campaign with template workflows, processes should first be tested on a development environment. After this validation, the workflow can be deployed and started on production.\n\nPerform all testing in development or staging environments, not in production environments. Performance cannot be ensured in such a case.\n\nArchived workflows may be kept on development or test platforms, in an Archived folder, but production environment should stay as clean as possible. Old workflows should be removed from production environment if they are inactive.\n","headers":[["title","Workflow best practices"],["description","Learn Campaign Workflow best practices"],["feature","Workflows"]],"sections":[{"section":"Workflow best practices","sectionId":"328ddb4e-326c-44d6-b013-5b49989fc37a","paragraphs":[]},{"section":"Execution and performance","sectionId":"4a3218c9-acab-496e-b550-46802e8cb98d","paragraphs":["Below are listed general guidelines about optimizing Campaign performance, including best practices to apply to your workflows.","Troubleshooting guidelines related to workflows execution are also available in Campaign Classic v7 Production Guide."]},{"section":"Logs","sectionId":"e3c975bb-adad-492a-8d57-e24abb4e8e80","paragraphs":["The JavaScript method logInfo() is a great solution for debugging a workflow. It is useful but it must be used carefully, especially for activities that are frequently run: it can overload the logs and significantly increase the size of the log table. But you might also need more than logInfo().","Two additional solutions are available to help:","Keep the result of interim populations between two executions","This option keeps temporary tables between two executions of a workflow. It is available in the workflow properties' General tab, and can be used for development and test purpose to monitor data and check results. You can use this option in development environments, but never use it on production environments. Keeping temporary tables could result in the size of the database increasing significantly and eventually the size limit being reached. Moreover, it will slow down the backup.","Only the working tables of the last execution of the workflow are kept. Working tables from previous executions are purged by the cleanup workflow, which runs on a daily basis.","CAUTION","This option must never be checked in a production workflow. This option is used to analyze the results and is designed only for testing purposes and hence must be used only on development or staging environments.","Log SQL queries in the journal","Available in the Execution tab of workflow properties, this option will log all SQL queries generated by the tool from the different activities. It is a good way to see what is actually executed by the platform. However, this option should only be used temporarily during development and not activated on production.","Purge the logs when they are not needed anymore. Workflow history is not purged automatically: all messages are kept by default. History can be purged via the File > Actions menu or by clicking the Actions button located in the toolbar above the list. Select Purge history.\nTo learn how to purge your logs, refer to this documentation."]},{"section":"Workflow planning","sectionId":"8c48e501-63db-4e24-8ea7-63d970ebb439","paragraphs":["Try to maintain a stable level of activity along the day and avoid peaks to prevent the instance from overload. To do so, distribute workflow starting times evenly throughout the day.\nSchedule data load overnight to reduce resource contention.\nLong workflows can potentially have an impact on the server and database resources. Split the longest workflows to reduce processing time.\nTo reduce overall run times, replace time-consuming activities with simplified and faster activities.\nAvoid running more than 20 workflows simultaneously. When too many workflows are executed at the same time, the system can run out of resources and become unstable. For more information on why your workflow may not be starting, refer to this article."]},{"section":"Execute in the engine option","sectionId":"0e7885af-8e9f-4607-bb2a-e415a8b1162f","paragraphs":["In the Workflow properties window, never check the Execute in the engine option. When this option is enabled, the workflow takes priority and all other workflows are stopped by the workflow engine until this one is finished."]},{"section":"Workflow properties","sectionId":"d8a1fdc6-217c-4cc7-a6b7-57869ec4ddc8","paragraphs":[]},{"section":"Workflow folders","sectionId":"fd7d6b80-fcba-4871-8234-de08e82d8060","paragraphs":["Adobe recommends you to create your workflows in a dedicated folder.","If the workflow affects the whole platform (cleansing processes for example), you can consider adding a sub-folder in the built-in Technical Workflows folder."]},{"section":"Workflow naming","sectionId":"8838f6cd-55dc-4d3f-947e-78f26207baeb","paragraphs":["Because it makes them easier to find and troubleshoot if they are not performing in the expected ways, Adobe recommends to give your workflows proper names and labels: fill in the workflow's description field to summarize the process to be performed so that the operator can easily understand it.","If the workflow is part of a process involving multiple workflows, you can be explicit when entering a label; using numbers is a great way to order the workflows (by Label).","For example:","001 - Import - Import recipients\n002 - Import - Import sales\n003 - Import - Import sales details\n010 - Export - Export delivery logs\n011 - Export - Export tracking logs"]},{"section":"Workflow severity","sectionId":"a02300a3-ed26-4bb6-96d6-b16d0fcd079b","paragraphs":["You can configure the severity of a workflow in the workflow properties, in the Execution tab:","Normal\nProduction\nCritical","Providing this information when creating a workflow will help you understand the severity of the process configured.","This option has no functional impact on workflows other than campaign workflows.","Campaign workflows (workflows created as part of a campaign/operation) with a higher severity are executed in priority in case the campaign has many processes supposed to run simultaneously. By default, only 10 processes can run simultaneously in a campaign, according to the option NmsOperation_LimitConcurrency. For example, if a campaign contains 25 workflows, workflows with a higher severity will then be executed in the first pool of 10 processes."]},{"section":"Workflow monitoring","sectionId":"30910a95-b38c-4e8c-b6ae-766c1602ad92","paragraphs":["All your scheduled workflows running on production environments should be monitored in order to be alerted if there is an error.","In the workflow properties, select a Supervisor group, either the default Workflow supervisors or a custom group. Make sure that at least one operator belongs to this group, with an email set up.","Before you start building a workflow, remember to define workflow supervisors. They will be notified by email in case of errors. For more on this, refer to Managing errors.","Regularly check the Monitoring tab to view the overall status of the active workflows. For more on this, refer to Instance supervision.","The Workflow HeatMap enables the Adobe Campaign platform administrators to monitor the load on the instance and plan workflows accordingly. For more on this, refer to Workflow monitoring."]},{"section":"Using activities","sectionId":"9377a07a-eaee-40ff-a958-f45d39d2bc80","paragraphs":["CAUTION","You can copy and paste activities within a same workflow. However, we do not recommend to copy paste activities across different workflows. Some settings attached to activities like Deliveries and Scheduler could lead to conflicts and errors while executing the destination workflow. Instead, we recommended you to  Duplicate workflows. For more information, see Duplicating workflows."]},{"section":"Name of the activity","sectionId":"881c3b44-0a02-4e84-9f1e-d0f99a2e39d4","paragraphs":["While developing your workflow, all activities will have a name, as will all Adobe Campaign objects. While the name is generated by the tool, we recommend you rename it with an explicit name when configuring it. The risk with doing it later is that it may interrupt the workflow with activities using the name of another previous activity. So it would be a difficult job to update the names afterward.","The activity name can be found in the Advanced tab. Don't leave them named query, query1, query11, but give them explicit names such as querySubscribedRecipients. This name will show up in the journal, and if applicable in the SQL logs, and this will help to debug the workflow when configuring it."]},{"section":"First and last activities","sectionId":"1b7cdef9-ce2a-40c1-9fdd-9e9d37db84a7","paragraphs":["Always start your workflow with a Start activity or a Scheduler activity. When relevant, you can also use an External signal activity.","When building your workflow, only use one Scheduler activity per branch. If the same branch of a workflow has several schedulers (linked to each other), the number of tasks to be executed will be multiplied exponentially, which would considerably overload the database. This rule also applies to all activities with a Scheduling & History tab. Learn more on Scheduling.","Use End activities for every workflow. This lets Adobe Campaign free up temporary space used for calculations within workflows. For more on this, refer to: Start and end."]},{"section":"Javascript within an activity","sectionId":"fe5d421b-5dff-41a9-9e74-7bc3e94a41e3","paragraphs":["You may want to add JavaScript when initializing a workflow activity. This can be done in an activity's Advanced tab of the activity.","To make spotting the workflow easier, we recommend using double dashes at the start and end of the activity label as follows: -- My label --."]},{"section":"Signal","sectionId":"e6aadc62-a8d5-48c7-8707-f46b394b9ff8","paragraphs":["Most of the time, you will not know where the signal is called from. In order to avoid this problem, use the Comment field within the Advanced tab of the signal activity to document the expected origin of a signal for this activity."]},{"section":"Workflow update","sectionId":"b5f4b396-e5eb-4d47-a54f-0130ccc41c7f","paragraphs":["A production workflow should not be updated directly. Unless the process consists of creating a campaign with template workflows, processes should first be tested on a development environment. After this validation, the workflow can be deployed and started on production.","Perform all testing in development or staging environments, not in production environments. Performance cannot be ensured in such a case.","Archived workflows may be kept on development or test platforms, in an Archived folder, but production environment should stay as clean as possible. Old workflows should be removed from production environment if they are inactive."]}]}